{"ast":null,"code":"export const repeatingCharacter = value => {\n  const arrayOfValue = value.split('');\n  return !arrayOfValue.some((arrayValue, index) => {\n    return arrayValue === arrayOfValue[index - 1] || arrayValue === arrayOfValue[index + 1];\n  });\n};\nexport const atLeastOneCapitalorSmallLetter = value => {\n  const letterArray = value.split('').filter(character => character.match(/^[A-Za-z]+$/));\n  const isUpperCase = letterArray.some(letter => letter === letter.toUpperCase());\n  const isLowerCase = letterArray.some(letter => letter === letter.toLowerCase());\n  return isLowerCase && isUpperCase;\n};\nexport const atLeastOneNumber = value => {\n  const letterArray = value.split('');\n  return letterArray.some(letter => Number(letter) ? true : false);\n};\nexport const atLeastOneSpecialCharacter = value => {\n  const letterArray = value.split('').filter(character => !character.match(/\\w+/));\n  return letterArray.length > 0;\n};","map":{"version":3,"names":["repeatingCharacter","value","arrayOfValue","split","some","arrayValue","index","atLeastOneCapitalorSmallLetter","letterArray","filter","character","match","isUpperCase","letter","toUpperCase","isLowerCase","toLowerCase","atLeastOneNumber","Number","atLeastOneSpecialCharacter","length"],"sources":["C:/Users/iamsa/OneDrive/Desktop/Afford Medical/22053271/Solution 2/react-social-media-app/src/helpers/utils/validationFunctions.ts"],"sourcesContent":["export const repeatingCharacter: (value: string) => boolean = (value) => {\r\n  const arrayOfValue = value.split('');\r\n\r\n  return !arrayOfValue.some((arrayValue, index) => {\r\n    return arrayValue === arrayOfValue[index - 1] || arrayValue === arrayOfValue[index + 1];\r\n  });\r\n};\r\n\r\nexport const atLeastOneCapitalorSmallLetter: (value: string) => boolean = (value) => {\r\n  const letterArray = value.split('').filter((character) => character.match(/^[A-Za-z]+$/));\r\n  const isUpperCase = letterArray.some((letter) => letter === letter.toUpperCase());\r\n  const isLowerCase = letterArray.some((letter) => letter === letter.toLowerCase());\r\n\r\n  return isLowerCase && isUpperCase;\r\n};\r\n\r\nexport const atLeastOneNumber: (value: string) => boolean = (value) => {\r\n  const letterArray = value.split('');\r\n\r\n  return letterArray.some((letter) => (Number(letter) ? true : false));\r\n};\r\n\r\nexport const atLeastOneSpecialCharacter: (value: string) => boolean = (value) => {\r\n  const letterArray = value.split('').filter((character) => !character.match(/\\w+/));\r\n\r\n  return letterArray.length > 0;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAA8C,GAAIC,KAAK,IAAK;EACvE,MAAMC,YAAY,GAAGD,KAAK,CAACE,KAAK,CAAC,EAAE,CAAC;EAEpC,OAAO,CAACD,YAAY,CAACE,IAAI,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC/C,OAAOD,UAAU,KAAKH,YAAY,CAACI,KAAK,GAAG,CAAC,CAAC,IAAID,UAAU,KAAKH,YAAY,CAACI,KAAK,GAAG,CAAC,CAAC;EACzF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,8BAA0D,GAAIN,KAAK,IAAK;EACnF,MAAMO,WAAW,GAAGP,KAAK,CAACE,KAAK,CAAC,EAAE,CAAC,CAACM,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,CAAC,aAAa,CAAC,CAAC;EACzF,MAAMC,WAAW,GAAGJ,WAAW,CAACJ,IAAI,CAAES,MAAM,IAAKA,MAAM,KAAKA,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;EACjF,MAAMC,WAAW,GAAGP,WAAW,CAACJ,IAAI,CAAES,MAAM,IAAKA,MAAM,KAAKA,MAAM,CAACG,WAAW,CAAC,CAAC,CAAC;EAEjF,OAAOD,WAAW,IAAIH,WAAW;AACnC,CAAC;AAED,OAAO,MAAMK,gBAA4C,GAAIhB,KAAK,IAAK;EACrE,MAAMO,WAAW,GAAGP,KAAK,CAACE,KAAK,CAAC,EAAE,CAAC;EAEnC,OAAOK,WAAW,CAACJ,IAAI,CAAES,MAAM,IAAMK,MAAM,CAACL,MAAM,CAAC,GAAG,IAAI,GAAG,KAAM,CAAC;AACtE,CAAC;AAED,OAAO,MAAMM,0BAAsD,GAAIlB,KAAK,IAAK;EAC/E,MAAMO,WAAW,GAAGP,KAAK,CAACE,KAAK,CAAC,EAAE,CAAC,CAACM,MAAM,CAAEC,SAAS,IAAK,CAACA,SAAS,CAACC,KAAK,CAAC,KAAK,CAAC,CAAC;EAElF,OAAOH,WAAW,CAACY,MAAM,GAAG,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}