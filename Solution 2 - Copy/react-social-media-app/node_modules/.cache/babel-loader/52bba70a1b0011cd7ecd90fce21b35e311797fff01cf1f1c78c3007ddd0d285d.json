{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport APIRequestReducer from '@helpers/reducers/APIRequestReducer';\nimport appReducer from '@helpers/reducers/appReducer';\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    APICalls: APIRequestReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useAppSelector = useSelector;\nif (window.Cypress) {\n  window.store = store;\n}","map":{"version":3,"names":["configureStore","useDispatch","useSelector","APIRequestReducer","appReducer","store","reducer","app","APICalls","useAppDispatch","_s","useAppSelector","window","Cypress"],"sources":["C:/Users/iamsa/OneDrive/Desktop/Afford Medical/22053271/Solution 2/react-social-media-app/src/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport APIRequestReducer from '@helpers/reducers/APIRequestReducer';\r\nimport appReducer from '@helpers/reducers/appReducer';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    store: any;\r\n    Cypress: any;\r\n  }\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    APICalls: APIRequestReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nif (window.Cypress) {\r\n  window.store = store;\r\n}\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC5E,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,UAAU,MAAM,8BAA8B;AASrD,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,GAAG,EAAEH,UAAU;IACfI,QAAQ,EAAEL;EACZ;AACF,CAAC,CAAC;;AAEF;;AAEA;;AAGA,OAAO,MAAMM,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAmBT,WAAW,CAAc,CAAC;AAAA;AAACS,EAAA,CAA/DD,cAAc;EAAA,QAAsBR,WAAW;AAAA;AAC5D,OAAO,MAAMU,cAA+C,GAAGT,WAAW;AAE1E,IAAIU,MAAM,CAACC,OAAO,EAAE;EAClBD,MAAM,CAACP,KAAK,GAAGA,KAAK;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}